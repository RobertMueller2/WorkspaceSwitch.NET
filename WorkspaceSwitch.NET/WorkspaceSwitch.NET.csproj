<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net4.8</TargetFramework>
    <!-- <TargetFramework>net6.0-windows</TargetFramework> -->
    <!-- not available in 4.8 -->
    <!-- <ImplicitUsings>enable</ImplicitUsings> -->
    <!--<Nullable>enable</Nullable>-->
    <UseWPF>true</UseWPF>
    <StartupObject>WorkspaceSwitcher.Program</StartupObject>
    <ApplicationIcon>res\WS.ico</ApplicationIcon>
    <RootNamespace>WorkspaceSwitcher</RootNamespace>
    <DefaultItemExcludes>$(DefaultItemExcludes);VirtualDesktop\*</DefaultItemExcludes>
  </PropertyGroup>

  <Import Project="..\LocalSettings.props" />

  <Target Name="EmbedLocal" BeforeTargets="PrepareForBuild">
    <ItemGroup>
      <EmbeddedResource Include="res\WS.ico">
        <LogicalName>AppIcon</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\1.ico">
        <LogicalName>Icon1</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\2.ico">
        <LogicalName>Icon2</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\3.ico">
        <LogicalName>Icon3</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\4.ico">
        <LogicalName>Icon4</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\5.ico">
        <LogicalName>Icon5</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\6.ico">
        <LogicalName>Icon6</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\7.ico">
        <LogicalName>Icon7</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\8.ico">
        <LogicalName>Icon8</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\9.ico">
        <LogicalName>Icon9</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\10.ico">
        <LogicalName>Icon10</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\1_dev.ico">
        <LogicalName>Icon1_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\2_dev.ico">
        <LogicalName>Icon2_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\3_dev.ico">
        <LogicalName>Icon3_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\4_dev.ico">
        <LogicalName>Icon4_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\5_dev.ico">
        <LogicalName>Icon5_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\6_dev.ico">
        <LogicalName>Icon6_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\7_dev.ico">
        <LogicalName>Icon7_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\8_dev.ico">
        <LogicalName>Icon8_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\9_dev.ico">
        <LogicalName>Icon9_dev</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="res\10_dev.ico">
        <LogicalName>Icon10_dev</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
    <Message Text="Embed local references complete for $(OutputPath)$(TargetFileName)." Importance="high" />
  </Target>

  <ItemGroup>
    <None Include="../LICENSE">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="../NOTICE.md">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <UsingTask TaskName="GenerateNotice" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <SubProjects ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <NoticeFile ParameterType="System.String" Required="true" />
      <GitRepoUrls ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          File.WriteAllText(NoticeFile, "# Notice\r\n\r\nWorkspaceSwitch.NET incorporates the following software components:\r\n\r\n");
          var i=0;
          var files = new string[] { "LICENSE", "NOTICE.md" };
          
          foreach (var dir in SubProjects)
          {            
            File.AppendAllText(NoticeFile, $"## { Path.GetFileName(dir.ItemSpec) }\r\n\r\n");

            var tmpfile = GitRepoUrls[i].ItemSpec;
            var repoUrl = File.ReadAllText(tmpfile);
            File.AppendAllText(NoticeFile, $"**Source**: { repoUrl }\r\n\r\n");
            File.Delete(tmpfile);
            
            foreach (var file in files)
            {
              var realFile = dir.ItemSpec + Path.DirectorySeparatorChar + file;
            
              if (File.Exists(realFile))
              {
                File.AppendAllText(NoticeFile, $"### { file }\r\n\r\n");
                File.AppendAllText(NoticeFile, $"{ File.ReadAllText(realFile) }\r\n\r\n");
              }
            }
            
            i++;
          }
          return true;
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="BuildVirtualDesktop" BeforeTargets="PrepareForBuild">
    <ItemGroup>
      <ExeFiles Include="..\VirtualDesktop\*.exe" />
      <CsFiles Include="..\VirtualDesktop\*.cs" />
    </ItemGroup>

    <!-- Convert .cs filenames to a format that matches the .exe filenames for comparison -->
    <ItemGroup>
      <TransformedCsFiles Include="@(CsFiles->'%(Filename)')"/>
    </ItemGroup>

    <!-- Delete .exe files where no matching .cs file basename exists -->
    <Delete
      Files="@(ExeFiles)"
      Condition="'@(TransformedCsFiles)' == '' Or !Exists('..\VirtualDesktop\%(Filename).cs')"
  />
    <Exec Command="..\VirtualDesktop\Compile.bat" WorkingDirectory="..\VirtualDesktop" />
  </Target>
  
  <Target Name="GenerateNoticeTask" DependsOnTargets="FetchGitOrigins" BeforeTargets="Build">
    <GenerateNotice
      SubProjects="@(SubProject)"
      NoticeFile="../NOTICE.md"
      GitRepoUrls="@(GitOriginUrl)" />
  </Target>

  <Target Name="FetchGitOrigins">
    <ItemGroup>
      <SubProject Include="../VirtualDesktop" />
      <SubProject Include="../Win32HotkeyListener" />
    </ItemGroup>

    <Exec Command="git -C %(SubProject.Identity) remote get-url origin &gt; %(SubProject.Identity).tmp" />

    <ItemGroup>
      <GitOriginUrl Include="@(SubProject -> '%(Identity).tmp')" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\Win32HotkeyListener\Win32HotkeyListener.csproj" />
  </ItemGroup>
</Project>
